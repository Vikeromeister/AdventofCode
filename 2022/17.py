input = ">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>"

# input = "><<<<>>>><>>><<><<<<>>>><<>>><>>><<<<>>>><<>>>><<<>>>><<<>>>><<<>>><<<<>><>><<<<>>><><<<><><>>>><<<<><<<<>><<<>>>><<>><><>>>><<<>>><<<>>><<>>>><>>>><>><>>><<>><><<<<><>><<<>>>><<<>>><<<>><>><<<>>><<<<>>>><><<<>>><<<>>><<<<><<<<>>><<<<>>><<<>>><<<<>>><<>>><<><<<>><<<>>><<<<><<<<>>><<<><<>>>><<<>><>>><<>>><<<><<<<>>><<><<<<>>>><<>>>><<>>>><<<<>>><><<<<><>><<<>>>><<<<>><>>>><>><>><>><<<>><<<>>>><<<>><<>><<<<><<<<><<>>>><<<<><<<>>><>><<<>>><<<><<<><<<<><<><<<>>><<<<>>>><<<<><<>><<<<>>><>>><<<<><<<>>>><<><>><<<<>><<<<>>>><<<><<<<><<<<>>><<<><<>>><>>><<<<>>><<>><<<<>>><<<><<<>><<<<>>>><<<<><<><<<<>>>><>>>><<<<>>>><<<>>>><<<><<>>><>>><<<<>><<<<>>><><>><<<>>>><<<<>><<<>><<>><<<>>><<<>>>><<<<>>>><<>>>><<>>>><><<<<>><<<<>>>><<<<>>><<<<>><>><<<>>><>>>><><<>><<>>><<<>>>><>>><<>><<<>><>>><>>><><>><>><<<><<<>>>><>><<<><<<>>><<<<><<>>>><<<><<<>>>><>><<<>>>><<<>>>><>>><><>>>><>><<><<<>>>><<>>>><<<>>><<<<>>><<<>><>>>><<<<>>>><>><<>>><<<<>>>><<<<><>>>><<>><<>>>><>><<<<>>>><<<<>><<<>>>><<>><><>><<<<>><<<>>>><<<>>><<>><><<<>>>><<>><>><<>><>><<<<>><<<>>><<<<>>><<>>>><<>>><<<<>>><>><<><<<>><>>><<<>><<<<>>>><<<>>><<>>><<<>>><<<<>>>><<<<>>><<<>>><<>>>><<>>><<<>>><<><<>>>><<>>>><<><<>>><<><<<>>>><<<<><<<<>><<<>>>><>>><<<<>>><<<<>>>><<>><<<<>>>><<<><<<><<>>>><<<>>>><<<>>>><<<>><<>>><>>><<<<>>><<<<>><<<>>><<<>><<<<>>><<<<><<><>>><<<<>>><<<<>>>><>><<<<>><<<<>>>><<<<><<<>>>><>><<<<><<<<>>>><>><<><<<>>><<>>><<<<>><<<><<<><>><<>>>><<<><<<<><<<>>>><<<<>><<>><<<<>>>><><<<><<<>>>><<>>>><<>><<<<>>>><><><<<<><><<>>><<><<>>><>>><<>><><<><<>>>><<<<><<<>>>><<>><><<>>>><<<<><><<<>>>><<>>><<<><<<>>>><>><<<<>>>><>>><<><>>>><>>>><<<><>>><>>>><<<>><<<>>><<<<>>>><<>>>><<<<>>>><<><>><<<<>><<<<>>><<>>><>>>><<><<>>><>>>><<><<><<><><<<>><>><<<<>>><<<>>>><<<><<<<>><>><>>><<<<><<<>>>><<<>>><><<<<>>><<<<><<<<>>>><>><>>><<<><<>><<<><>>><<<<>><><<<<><>><<>><<>><>><<<<><<<>><>>>><<>><<<<>>><><<<>><<>><<>><>>><>>>><<><>><<<<>>><>>><<>>><<>>>><<>><<<<>>><>><<<>>><<<>>><<<<>>>><<<><<<<>><<><<<><<<>>><<><<>><>><>>><<<>>><<>><<>>><<>><<>><>><<<<>>>><<<<>>><<<>>>><<<<>>><<<>><<<>><<<<>>>><<>><<<<><<<<>><<>>><><<><<<<>>>><><>>>><<<<>>>><<<<>>>><<>><<<<>>>><<<><>><<>>>><<>>>><<<<>>>><<<>>><>><<>>>><<<>>>><<<<>>><<<<>><<<<>>>><<>>><<>>>><>>><>>>><><>><<<<>>>><<<>>>><<<>><<>>><<<<>>><>>>><<>>>><<<><>>><><<>>>><<>>>><<<>>>><<<<><<<<>>>><>>>><>><<<>>><<<>>>><<<>><<<>>><>><<>>><<><><<><<>>>><>>><<<<>><><>><>>><<<<><>>><<<>>><<<><<<<>>><<<>><<<>>><<>>><<<<><<<<><>><><<<<>>><<<>><<>><<<>><<<<>><>><>>>><<>>><<<>><<<>><<<<>><><<<<>>><<<>>>><<<<>>><<>><>><<>>><><<>>><<<>>><<<>><<>>>><<<<>><<<<>>>><<<><<><<<<>><<<<>><<<>>>><>><<<><>>>><<>>>><<><<<>>>><<<<>><<<>>>><<>>><>><<<<>>>><<<<>>><>>>><<<<><<><<>><>><>>><<<><<<<><<<<>><<<>>><<<<>><<><<<<>>>><<<>>>><<<>>>><<<<>>><<><<>><<><<<<>>>><<<><<<<>>>><<>>><<<<>><>>>><<<<>><<<>>>><<><<<<>>>><<<>><>>>><><<<>><<<><<<>>><>>>><>>><<<<><<<<>>><<>>><<<>>><<<<><<<<>>>><<>>><<<>><<>>><><<<>>>><<><>>><<>><<<>>>><<<><>><<<>>><<>>>><<<>>>><>><<><>><<>>>><<<>>>><<<<>>>><<<>>><<<>><<<<><<<<>><><<><<<>><>>><<<<>>><<<<>><<<>>><<>><<<<><<<><<<><<<>>><<<<>>><<<<>><<>>><<>><<<<>>>><<>>>><<>>>><<>><>>><>>>><<>>>><<<>>><<<<>>><>>><>>>><<<>><<>>><<>>>><<>>>><<<>>><<>>><<<><<<>><>>>><<<>><>>><<<>>><>>>><>><<>>><<<<>>><<<<>><>>><<<<>>><<<<><<<>>><><>>><<<>>><>><>>>><<>>>><<<>><<>>><<>><<<<>><<<<><>>><<>><<<<>>><<<>>><<>>>><>>>><<<><>>>><<><><>>><<>>>><<<>>>><><>><<<<>><<<>>>><<<<><<<<>>>><<<<>><>>>><<<>>>><<><<>>>><<<<>>>><<<<>>><>><>>>><>>>><>><<>>>><>>>><<>>><<<<>>>><<>>><><<>>>><<>><<<<><<><>>>><<<<>><<><<><<>><<<><<<>><<<<>>><<<<>><<>><>>><<<<>>>><<<<>>>><<<<>>><><<<<><<<<><><<<<><<<<>>>><<<<>>>><><>>><<<<><<<<><<<><><<<<>><><<<><<<<>><>>><><><<<><>>><<><<>><<<>><<<>>>><<<<>>><<>><<<<><>>><>>><<>>>><<<<>>><<<>>>><<<>>>><<<>><<<>><<<<>>><<<<>><>>><<<<><>>>><<<>><>>><<>>><<<<>><<><<<>><>>><<<>><<<<>>><<<>>>><>>><><<<><<<>>>><<>>><<><>>>><>>>><<<<>>><><><>>>><<<<>><<<<>>><<>>><<<><<<>>>><<><<<>><<<>>>><<<<>>>><>>><<<>>><><<<>><<<<>><<<>>>><>><<><><<>><<<>><<<>>><<<<>>>><<<><<<<>><<<<>>>><<<<>>>><<><<<<>>><<<<>><<<<>><<<>><<<<>>><<>>>><<>>><>><<>>>><>>><>>><<<><>>>><<<>>><<<<><<<<>>><<><><>>>><<>>>><<>>>><<<<>>>><<><<><<<>>><<<>>>><<><<<><<>>><<<><<<>>>><<<<>>><<>>>><<>><><<<><<>><<>>><<<<>><>><<<>><<<<>><<<<><<>>><<><<<<>>>><<<>><<<<>><<>>>><>>>><>>><>>>><<<>>><<<>>>><<>>>><>><>><<<>><<<>>><<>>><<<<>>><<<<>>><<>>>><>>><>><<<<>>>><<>>>><<>>>><<<<>>>><>>>><><>>><<>>>><<<<><<>>>><<<<>><<<<>>>><<>><<<<><<<<>>><<<<>><<>>>><<<>>>><<<><>><<<><<>>><<<<>><<<>>><><<<<>><<<<>><>>><<<<>>><<<<>>>><>>>><<>>>><<>>><>>>><<<<>>><<>><<<><<><<<>>>><<<>>>><<<<><<>>><>><<<<><<<>>><>><><<<><<>>>><>>>><>><<>>><<>>>><<>>>><<<<>><<>><><<>>><<>><<>><<>>><>><<<<>>>><<>>>><<<<>>><<>><><<<><>><<<>><>>><>><<>>><><>>><<>>>><<<>>><<<<>>><<<>><<>><<<<>>><<<><<<>><<<<><<>><>><<<<>><<>>>><<<>><<<>>>><<<<>>>><<<<>><<>>><<<>>><<<>>>><<<<>>><<<<>>>><>><<<<>>>><<>>><><<>>>><<<<>>>><<<<>>>><>><<>><<<<><<<<>>><><>>><<<<>>><<><>>>><<<<><<<>>>><>>>><<<>>>><<<>>>><<>>><<>>><<<<><<<>><>>><<<><<<>>><>><>><<>>><<<>>>><<><>>><><<>>><<<<>>>><>><>>><>><<>>><<<><<><<>>><<>>>><<>>>><<>>><<<>><<<<><<<><<<<>><<>><>>>><<>><>><<<>>>><<>>>><<><<<<>><>><>><>>>><>>>><<<>>><<>><>>>><<<<>><<>>>><<<<>>><<<>>>><<><<<>><<<<><<>>><<>>><<>>>><<>><>>><>>><<<>>><>>>><<><<><<<>><<><<<><<<>><<<<>>>><>>><<<>>>><<<>><<<<><<>>>><>><>><<<<>>><<<>>><><>>><>>><<<>>><<<<>>>><>>>><<<><>><<>><<<>>><>><><<<>>>><><>>>><<<><<<>><<<>>><<>>>><<<<><<<>>><>>>><<<<>><<<<>>>><<<>>><<<>><<<>><<<<>>><<<><<>><<<<>><<>><<><<<<>>>><<><<>>><<<<><<<<>>><<>>><<<>>><<><<<>>>><<<<>>>><>>><<><<>><<<>><<<>>><<<<>>>><>><<<<>><<<<>>><>>>><<<<>><<>>>><>>>><<<>><<<>>>><<<>>>><<>><<<<>><<<<><>>><<>>>><<><<<><<><<<<>>><<<<>><<>>><><>>><<<<>><<<<>>><<<>><><<<>><<<><><<><><<>>><><<<<>><<>>><<><<<>>><>>>><><<<<>>>><<<><><<>>>><<<>><<<>><<<<>><<>>>><<<<><<<<>>><>>><<><<<<><<<<>>><<>>><>><<<<>>>><<><<<>>>><>>>><<>>><>><<<<><>>>><<><<><>><<<<><<<><<<><<<><><<>>><<>>><<>>>><<>>>><<<<>><<<>>>><<<>>>><<<>><<>>><<<<><<<<><<><<<<><<<>>><<>><<>>>><<>>><>>><><><>><><<>>><<><<<<><<<<>>>><<<><<>>>><<><<<>><<<<>>><<<<><<>><>><<<>>><<<>>>><<<>>><<<<>>><<<>>><><<<>>><<<>><<<>><>>>><<<>><<>>>><<>>><><<><><><<<><<<>><><<<>>>><>><<>>><<>>><<<<>><>><>><<<<>><>>><><<<>>><>><<<<>>><>>><>>><<>>>><<<<><>><<<>>><<><<<><<<>><>>><<>>>><<>><<<><<<><<<<>>><<<<>>>><<>>>><<>><<>>><>>>><<>>><<<>>>><<<<>><<<<>>><<<>>>><<><<<>>><<<>>><<<<>>><>><<>>><<<>><<<<><<<<>>><<<>>>><<<<><<>>><>>>><<<<>>>><<>>>><<><<<><<>><<>>><<<>>><<>><>>><<<<>>><<<>><<<<><<<<>><<<<>>>><<<<>>><<<<>>>><<>><<>>>><<>><<<><<<<>>><<<><<<<>>>><<<<>>><<<<>><>>>><<<<>>>><<>>><>><<<>>><><<<<>><><<<<><>><<>>>><><<<><<<<><<<>><<<<><<<<><>>>><<<<><<<<>>><<<<>>><<<>><<><>>>><<<<><><<>>>><<<><><<>>><<<>>>><<<>>>><<<>>><><<<><<<<>>><<>>>><<>>>><><<<<>><<<>>>><<<>>>><<>>><><>>>><<<>><<><>><><<<>>>><<<<>>>><<<>>>><<><>>><<<<><<<<>>>><<>><<>>><<<<><><>>><<<<>>>><<<<><>>>><>>>><<<>>><><>>><<<>>>><<<>>>><<<>>><>><<>>><<>>>><<<>>><<<><>>><<>><<<>>><<<<>>>><<<>><<><<>>><>>>><<>><<<>><<><<>>><>><<<<>>><<<<><><<<>>>><<<>>>><<<>>><><<>><<>>>><><>>>><>>>><<<<><<>>><<<<>><<<<><><<<>>>><<<<>><<<>>>><<<><<>><<<<>>>><<<<>><>>>><>>>><<<>>><>>>><<>>>><<<>>><<>>><<<<><<<<>>>><><<>>><>><<<>>>><<<<><<<<><<<><><<<<>><<<>><<<>>><<<<>>><<<>>>><>><<>>><<>>>><<<>>><<>>>><<>>>><><><<<>><>>><<<<>><<<><<<<>><<<<>><<<<>><><>>>><<<<><<<>><<>>><<>>>><<<<>>>><<<<>>><<<>><>>>><<>>>><<>>><<<><<<<><<<<>><<>>><>><<<<><>><<<<>><<<><>><><<>><<>>>><<>>><>><<<>><<<<><<<<><<<>><>>><<>><<<>><<>>><<<<>>>><<<>><<>>>><>>><<>>><<<<>>>><><>>><<<>>>><<<<>>>><<<><<<>>><<>>>><><<<<><<<><>>>><><<<<>>><<<>><><<>>>><<<<><<<><<<<>><<>>>><<<<>>>><<<><<<<>><<<<>><<>><<<<>><<<>><><<<<>><>><><<>><<<<>>>><<<<>>>><>>><>>><<>><<<><<<<>><>>>><>><<<>>><<<>>><<<<><>><<<>>>><<>>>><<<><>>><<<>>>><>>><<<>>><<<><<<>>>><>>><><<<><<<>>>><<<>>><<<<><<<>>>><>>>><<><<<>>><<>>><<<<>>>><<>><>>>><>>><<>><<<<>><<>><<<<><<<<>>><<>>>><<><<<>>><<>>>><>>>><>><<<<>>>><>>><>><<<<>><<>>><<<<><<<<>>>><<<>><<>><<<<>>>><<><<<<>>><<<<>>><>>><<<<>>><<<>>><>><<<>>>><<<<>>>><<<<><<>><<<<>>><>>><<>>>><<>>>><<<>>><<<><<<>><<<<>>>><<<<><<<><>>>><<<<>>><<>>><<<>>><<<<>>><<<>>><<>><<<>>>><<<<><<>><<<<>><<<<>>><<<><<<>>>><<<<>>><>>>><<<>>>><<<<>>>><>>><<<<>>><<<><>>>><>><><<<><<<>>><<<>>><<<>>>><<><>><<><<<<>>>><<><<<<>>>><<>><<>>><<<<><<<><<<<>>>><>>><<<><<><>><<<<>>><<<<><<>>><<>>>><<<<><<<<>>>><<<><<<>>>><><<<>><<>>><<<<>>>><<<>>><<<<>>>><<<<>><<<<>>>><<<<>><<<<>>><<>><<<>>><<<<>><<>><<>>><<<>>><<<>>><><>><<>>>><>>>><<><>>><<<><<<>>>><<<<>><><<<<>>><<>>>><<<<>><<<<>>><<<>>><<>>>><>>>><>>><<<<>>><<><<>><<><>>><<<<><<<>>>><>><<<><<<<>>><<<>>><<<<>>><<<<>>>><<<><<<>>><>><<<><<>><<>>>><><<<<>>>><<<>>><<<>>>><<<<>>><<<<><<>><<<<>>><<<<><<><<>>>><>>>><<>>><<<<>>><>>>><<<>>>><<<><<><<<<>>>><>><>><>>><<>>><<>>>><<<<>><<>><>>>><<<>>><<<>>>><<<<><<><<<>>>><<<><<<<>>>><<<<>><<>>><>>><<>>>><<<>><<>>>><<>><<>>>><>><>><<<>>>><>>><<<>><<<>><<<><<<<>>><>>><>>>><<<><>><<<<>>>><<<>>><<<>>>><<>>><<<>><<<>>>><>>><><<<><>><>>><><<<>><<>>><<<>><<<<><<<<>>><<>><<<<>>>><<<<>><<>>>><<<>>><>><<>><<<<><<<<>><<<>><<<<>>>><>><<><<<>>>><<<<><<<<><<<>>><<<>>>><>>><<<>>><<<<>><>>><<<>>>><<<<><<<>>>><<>>>><<<>>><<<><>><<<<>>><<<><<<><<><<<<><<<<><>>>><<<<><<<>><>>><<<<>>><<><<<>><<<><<<<>>>><<<>>><>>>><<>>><<<>>>><<<<>>><<<<>><><>>>><<<<>><<>>><>>>><><<<<><<<>>><>>><<<>>><>><<<>>>><>>>><>><>>>><<<>>>><>>><>>><<><><<<>>><<<>><<<>>><<>><>>><<<>><<<<><>><<>><<><<<<>>><<>>><<>>>><<<<><>>>><<>><>>><<>>><<<<><>>>><<><<<>>>><<<<><<<><<<>>><<<>>><<<<>>><<>>><<<>><><<>>><<<>>><<<>><<<>><<<>>>><<<<>><<>>>><<<<>>><>><<<>>><><<><<<>>>><<>>><<>>>><>><<<<>><<>>><<<<><<<<>>><<<<>>><<<>><<<>><<<<>>><<>>>><<<><<<>><<><<>>>><<<<><<<<><<<<><<<>>>><>>><<<<>>><><<>>><><<>>>><>>>><>>>><<<>>>><><<<>><><>>><<<><<<>>>><<>>>><>>><>><>><<<<><<<<>>><>>>><<<<>><<<>>><<>>>><<>><<><<<>>>><<>>>><<>>>><><>>><<>>>><<>>>><>>><<>><><<>><>>><>>><<<>>><<<<>>><<>>>><<>>>><><<<<>>>><<>><>>><<>>>><<>>>><<<<>><<<<>><<<>>><<<<>><>>>><<><<<>>><<<<><<<<>>>><<<>>><<>><<<<>><<<<>><<>>><<<>>><>><<<<><<<<>>>><<>>><<>>>><<<>>>><<<>><<<>><>><<><<<>><>>><><<>>><<<>>><<<>>><<>>>><<<>>>><>><<<<><><>><<<<"

from copy import copy

print(len(input))
def drop(shapeId):
    global height, dropped, cache, rocks, floor, statuses
    dropped += 1
    bottom = 4
    if shapeId == 0:
        shape = [(bottom, 2), (bottom, 3), (bottom, 4), (bottom, 5)]
    if shapeId == 1:
        shape = [(bottom, 3), (bottom+1, 2), (bottom+1,3), (bottom+1,4), (bottom+2,3)]
    if shapeId == 2:
        shape = [(bottom, 2), (bottom, 3), (bottom,4), (bottom+1,4), (bottom+2,4)]
    if shapeId == 3:
        shape = [(bottom, 2), (bottom+1, 2), (bottom+2,2), (bottom+3,2)]
    if shapeId == 4:
        shape = [(bottom, 2), (bottom, 3), (bottom+1,2), (bottom+1,3)]

    # printmap(shape)
    status = (copy(len(cache)), shapeId, copy(rocks))
    heights.append(height)
    if status in statuses:
        startIndex = statuses.index(status)
        length = dropped-startIndex
        
        periodGain = height - heights[startIndex]
        whole2022len = max(2022 - startIndex, 0)
        periods2022 = int(whole2022len / length)
        print(startIndex, len(heights),  whole2022len%length, 1000000000000%length)
        total2022 = periods2022*periodGain + heights[startIndex + (whole2022len%length)] # heights[startIndex%length]
        
        whole1trillen = max(1000000000000 - startIndex, 0)
        periods1bil = int((whole1trillen - (whole1trillen % length)) / length)
        total1bil = periods1bil*periodGain + heights[startIndex + 1000000000000%length] # heights[startIndex%length]
        # print(len(status[2]))
        # print(len(statuses[statuses.index(status)][2]))
        print(f"Period start: {startIndex}, Period end: {dropped}, Period length: {length}")
        print(f"Period height increase: {periodGain}")
        print(f"Number of periods: {periods2022}")
        print(f"Total periodical height: {periodGain * periods2022}")
        print(f"maradék {(whole2022len%length)}")
        print(f"heights[startId+maradék] {heights[startIndex + (whole2022len%length)]}")
        print(f"Total height: {total2022}")
        # print(f"Nr periods 1bil {periods1bil}")
        # print(f"Periodical height 1bil: {periods1bil * (height - heights[startIndex])}")
        # print(f"Total height 1tril: {total1bil}")
        exit()
    statuses.append(status)
    while True:
        if len(cache) == 0:
            cache = input
        direction = cache[0]
        cache = cache[1:]
        if direction == '>':
            canMove = True
            for point in shape:
                newpoint = (point[0], point[1] + 1)
                if newpoint in rocks or newpoint[1] > 6:
                    canMove = False
            if canMove:
                shape = [(point[0], point[1] + 1) for point in shape]
            # printmap(shape)
        else:
            canMove = True
            for point in shape:
                newpoint = (point[0], point[1] - 1)
                if newpoint in rocks or newpoint[1] < 0:
                    canMove = False
            if canMove:
                shape = [(point[0], point[1] - 1) for point in shape]
            # printmap(shape)
        
        canMove = True
        for point in shape:
            newpoint = (point[0] - 1, point[1])
            if newpoint in rocks or newpoint[0] <= -height:
                canMove = False
        if not canMove:
            rocks.extend(shape)
            # for point in shape:
            #     newFloor = True
            #     for i in range(7):
            #         if (point[0], i) not in rocks:
            #             newFloor = False
            #     if newFloor:
            #         floor = point[0]
            #         print(f"new floor {floor}")
            #         newrocks = copy(rock)
            #         for rock in rocks:
            #             if rock[0] >= floor:
            #                 newrocks.append(rock)
            #         rocks = newrocks
            # highest = max(highest, max([point[0] for point in shape]))
            shift = max([point[0] for point in shape])
            if shift > 0:
                height += shift
                newrocks = []
                for rock in rocks:
                    if rock[0] - shift > -30:
                        newrocks.append((rock[0] - shift, rock[1]))
                rocks = copy(newrocks)
            return
        else:
            shape = [(point[0] - 1, point[1]) for point in shape]
    
    
        # printmap(shape)
        # print(rocks)
    

def printmap(shape=[]):
    global rocks
    print()
    print(dropped)
    for row in range(6, max(-20, -height-1), -1):
        if row > -height:
            print('|', end='')
            for col in range(7):
                if (row, col) in shape:
                    print('@', end='')
                elif (row, col) in rocks:
                    print('#', end='')
                else:
                    print('.', end='')
            print('|')
        else:
            print("+-------+")
        
    

height = 0
heights = []
floor = 0
dropped = 0
rocks = []
cache = input
statuses = []
while True:
    drop(0)
    drop(1)
    if dropped == 2022:
        print(f"Height after 2022: {height}")
    drop(2)
    drop(3)
    drop(4)
    # print(dropped)
